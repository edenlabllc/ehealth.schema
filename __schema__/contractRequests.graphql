"""
Interface for contract request. Contains fields that are common for reimbursement and capitation versions of a contract request
"""
interface ContractRequest {
  "The ID of an object."
  id: ID!
  "Primary key identifier from the database."
  databaseId: UUID!
  "Human readable number of contract request."
  contractNumber: String
  "Contract that is prolongated."
  parentContract: Contract
  "ContractRequest that is changed."
  previousRequest: ContractRequest
  "Person who is responsible for the contract."
  assignee: Employee
  "The type of the contract."
  idForm: String!
  "Status of ContractRequest. Is set automatically."
  status: ContractRequestStatus!
  "Text, that is added in case Contract request was declined by NHS employee."
  statusReason: String
  "The city where contract is signed."
  issueCity: String
  "Content od printout form in html format."
  printoutContent: String
  "The day when contract takes effect."
  startDate: Date!
  "The day when contract ends."
  endDate: Date!
  "Block of information about legal entity in the contract."
  contractorLegalEntity: LegalEntity!
  "Additional conditions to contract."
  miscellaneous: String
  "Information about owner in legal entity that is in the contract."
  contractorOwner: Employee!
  "Proof for the employee to sign contracts."
  contractorBase: String!
  "Information about MSP bank account to make payment."
  contractorPaymentDetails: ContractorPaymentDetails!
  "Divisions from legal entity that are in the contract."
  contractorDivisions: [Division]
  "Employee who will sign contract on NHS side."
  nhsSigner: Employee
  "Information about legal entity from NHS side"
  nhsLegalEntity: LegalEntity
  "Documents which allows to represent nhs"
  nhsSignerBase: String
  "Payment method for the contract."
  nhsPaymentMethod: NhsPaymentMethod
  "Link to receive attached documents with particular types."
  attachedDocuments: [ContractDocument]!
  "Date and time when record was inserted"
  insertedAt: DateTime!
  "Date and time when record was updated"
  updatedAt: DateTime!
}

"""
Inputs that should be filled for update contract request. ContractRequest is updated by NHS employee through NHS Admin portal.
"""
input UpdateContractRequestInput {
  "Contract Request ID"
  id: ID!

  "ID of NHS employee who can sign contracts."
  nhsSignerId: UUID

  "Proof for the employee to sign contracts."
  nhsSignerBase: String

  "The price for the contract. Is filled with UAH"
  nhsContractPrice: Float

  "The payment method for contract."
  nhsPaymentMethod: NhsPaymentMethod

  "The city where contract is signed."
  issueCity: String

  "Additional information in contract."
  miscellaneous: String
}

"""
The payload that received when update contractRequest.
"""
type UpdateContractRequestPayload {
  "Payload for a ContractRequest."
  contractRequest: ContractRequest
}

"""
The fields that are necessery in order to set an assignee for a contractRequest.
"""
input AssignContractRequestInput {
  "Input for a single `contractRequestId` using its globally unique ID."
  id: ID!
  "Input for a single `employeeId` using its globally unique ID."
  employeeId: UUID!
}

"""
Autogenerated return type of `AssignContractRequest`
"""
type AssignContractRequestPayload {
  "Payload for ContractRequest"
  contractRequest: ContractRequest
}

"""
Autogenerated input type of `DeclineContractRequest`
"""
input DeclineContractRequestInput {
  "Input for a single `contractRequestId` using its globally unique ID."
  id: ID!
  "Input for SignedContent"
  signedContent: SignedContent!
}

"""
Autogenerated return type of `DeclineContractRequest`
"""
type DeclineContractRequestPayload {
  "Payload for ContractRequest."
  contractRequest: ContractRequest
}

"""
Autogenerated input type of `ApproveContractRequest`
"""
input ApproveContractRequestInput {
  "Input for a single `contractRequestId` using its globally unique ID."
  id: ID!
  "Input for signedContent"
  signedContent: SignedContent!
}

"""
Autogenerated return type of `ApproveContractRequest`
"""
type ApproveContractRequestPayload {
  "Payload for ContractRequest."
  contractRequest: ContractRequest
}

"""
Autogenerated input type of `SignContractRequest`
"""
input SignContractRequestInput {
  "Input for a single `contractRequestId` using its globally unique ID."
  id: ID!
  "Input for SignedContent."
  signedContent: SignedContent!
}

"""
Autogenerated return type of `SignContractRequest`
"""
type SignContractRequestPayload {
  "Payload for contractRequest."
  contractRequest: ContractRequest
}
